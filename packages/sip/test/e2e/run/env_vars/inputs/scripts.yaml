test-suite:
  (aliases): ts
  (command):
    - (+) {$test-suite:revali_server}
    - (+) {$test-suite:revali_client}
    # - echo "hi"
    - |
      # if [ -n "{--gen-only}" ]; then
      #   exit 0
      # fi
      echo "doing this"

      cd test_suite || exit 1

      sip test --test-randomize-ordering-seed random --bail --recursive --concurrent

      if [ $? -ne 0 ]; then
        exit 1
      fi
    - echo "hi"

  _generate: |
    echo $TEST_DIR
    cd $TEST_DIR || exit 1
    {$test-suite:_pubspec:comment-out}

    if [ -z "{--skip-gen}" ]; then
      dart run revali dev --generate-only --recompile
    fi

    {$test-suite:_pubspec:uncomment}

    if [ ! $? = 0 ]; then
      echo "failed to generate revali code"
      exit 1
    fi

  _pubspec:
    comment-out: |
      # get the line number of the first line that contains 'path: .revali/*'
      LINE_NUMBER=$(grep -n "path: .revali/*" pubspec.yaml | cut -d: -f1)

      if [ -n "$LINE_NUMBER" ]; then
        # comment out the line and the preceding line
        sed -i '' "$((LINE_NUMBER))s/^/#/" pubspec.yaml
        sed -i '' "$((LINE_NUMBER - 1))s/^/#/" pubspec.yaml
      fi

    uncomment: |
      # get the line number of the first line that contains 'path: .revali/*'
      LINE_NUMBER=$(grep -n "path: .revali/*" pubspec.yaml | cut -d: -f1)

      if [ -n "$LINE_NUMBER" ]; then
        # uncomment the line and the preceding line
        sed -i '' "$((LINE_NUMBER))s/^#//" pubspec.yaml
        sed -i '' "$((LINE_NUMBER - 1))s/^#//" pubspec.yaml
      fi

  revali_client:
    (aliases): client
    (command):
      - (+) {$test-suite:revali_client:primitive-return-types}
      - (+) {$test-suite:revali_client:null-primitive-return-types}
      - (+) {$test-suite:revali_client:custom-return-types}
      - (+) {$test-suite:revali_client:methods}
      - (+) {$test-suite:revali_client:params}
      - (+) {$test-suite:revali_client:sse}
      - (+) {$test-suite:revali_client:sse_custom}
      - (+) {$test-suite:revali_client:websocket}

    _package: |
      TEST_DIR=test_suite/constructs/revali_client/$DIR
      {$test-suite:_generate}

    primitive-return-types: |
      DIR=primitive_return_types
      {$test-suite:revali_client:_package}
    null-primitive-return-types: |
      DIR=null_primitive_return_types
      {$test-suite:revali_client:_package}
    custom-return-types: |
      DIR=custom_return_types
      {$test-suite:revali_client:_package}
    methods: |
      DIR=methods
      {$test-suite:revali_client:_package}
    params: |
      DIR=params
      {$test-suite:revali_client:_package}
    sse: |
      DIR=sse
      {$test-suite:revali_client:_package}
    sse_custom: |
      DIR=sse_custom
      {$test-suite:revali_client:_package}
    websocket:
      (aliases): ws
      (command):
        - (+) {$test-suite:revali_client:websocket:custom-return-types}
        - (+) {$test-suite:revali_client:websocket:primitive-return-types}
        - (+) {$test-suite:revali_client:websocket:params}
        - (+) {$test-suite:revali_client:websocket:null-primitive-return-types}
        - (+) {$test-suite:revali_client:websocket:two-way}
      custom-return-types: |
        DIR=websockets/custom_return_types
        {$test-suite:revali_client:_package}
      primitive-return-types: |
        DIR=websockets/primitive_return_types
        {$test-suite:revali_client:_package}
      null-primitive-return-types: |
        DIR=websockets/null_primitive_return_types
        {$test-suite:revali_client:_package}
      params: |
        DIR=websockets/params
        {$test-suite:revali_client:_package}
      two-way: |
        DIR=websockets/two_way
        {$test-suite:revali_client:_package}

  revali_server:
    (aliases): server
    (command):
      - (+) {$test-suite:revali_server:methods}
      - (+) {$test-suite:revali_server:custom-return-types}
      - (+) {$test-suite:revali_server:primitive-return-types}
      - (+) {$test-suite:revali_server:null-primitive-return-types}
      - (+) {$test-suite:revali_server:middleware}
      - (+) {$test-suite:revali_server:params}
      - (+) {$test-suite:revali_server:custom-params}
      - (+) {$test-suite:revali_server:sse}
      - (+) {$test-suite:revali_server:sse_custom}
    _package: |
      TEST_DIR=test_suite/constructs/revali_server/$DIR
      {$test-suite:_generate}
    methods: |
      DIR=methods
      {$test-suite:revali_server:_package}
    custom-return-types: |
      DIR=custom_return_types
      {$test-suite:revali_server:_package}
    primitive-return-types: |
      DIR=primitive_return_types
      {$test-suite:revali_server:_package}
    null-primitive-return-types: |
      DIR=null_primitive_return_types
      {$test-suite:revali_server:_package}
    middleware: |
      DIR=middleware
      {$test-suite:revali_server:_package}
    params: |
      DIR=params
      {$test-suite:revali_server:_package}
    custom-params: |
      DIR=custom_params
      {$test-suite:revali_server:_package}
    sse: |
      DIR=sse
      {$test-suite:revali_server:_package}
    sse_custom: |
      DIR=sse_custom
      {$test-suite:revali_server:_package}

publish:
  (bail):
  (env):
    vars:
      GEN_ONLY: true
  (command):
    - "{$test-suite}"
    - sip test --recursive --bail --concurrent
    - cd scripts && dart run lib/prep_for_publish.dart
